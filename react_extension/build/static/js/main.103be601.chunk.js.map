{"version":3,"sources":["components/Context/index.jsx","components/Count/index.jsx","components/Error/Child/index.jsx","components/Error/index.jsx","components/Fragment/index.jsx","components/Hooks/index.jsx","components/LazyLoad/Loading/index.jsx","components/LazyLoad/index.jsx","components/Pure/index.jsx","components/RenderProps/index.jsx","App.js","index.js"],"names":["Context","React","createContext","B","Component","C","Consumer","value","username","age","Child","state","name","this","users","map","user","id","Error","hasError","error","console","log","Hooks","Loading","style","backgroundColor","color","Home","lazy","About","PureComponent","props","car","A","render","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"0MAGMA,EAAUC,IAAMC,gBAiBhBC,GAhByBC,Y,4JAiB3B,WACI,OACI,oCAEI,cAACC,EAAD,W,GALAD,cAuBhB,SAASC,IACL,OACI,sCAEI,cAACL,EAAQM,SAAT,UAEQ,SAAAC,GACI,MAAM,GAAN,OAAUA,EAAMC,SAAhB,YAA4BD,EAAME,WChDvBL,Y,ICAdM,E,4MAEjBC,MAAQ,CAACC,KAAK,U,4CACd,WACI,OACI,8BAEQC,KAAKF,MAAMG,MAAMC,KAAI,SAACC,GAClB,OAAO,6BAAmBA,EAAKJ,MAAfI,EAAKC,a,GARVb,aCCdc,E,4MAEjBP,MAAM,CAACQ,SAAS,I,4CAOhB,WACI,OACI,gHAEKN,KAAKF,MAAMQ,SAAS,oDAAa,cAAC,EAAD,U,uCAT9C,SAAgCC,GAE5B,OADAC,QAAQC,IAAIF,GACL,CAACD,SAASC,O,GANUhB,aCDGA,Y,MCiGvBmB,I,OCjGMC,E,4JACjB,WACI,OACI,8BACI,oBAAIC,MAAO,CAACC,gBAAgB,SAASC,MAAM,QAA3C,sC,GAJqBvB,aCQ/BwB,EAAOC,gBAAK,kBAAO,gCACnBC,EAAQD,gBAAK,kBAAM,gCC8BnBnB,GD7BgCN,YCNF2B,gB,4JAyChC,WAEI,OADAV,QAAQC,IAAI,4BAER,iEAGKT,KAAKmB,MAAMC,W,GAZRF,kBC3BdG,GAZmC9B,Y,4MAarCO,MAAO,CAACC,KAAK,U,4CACb,WAEI,OADAS,QAAQC,IAAIT,KAAKmB,OAEb,oCAEKnB,KAAKmB,MAAMG,OAAOtB,KAAKF,MAAMC,a,GAP9BR,cAaVD,E,4JACF,WACI,OACI,yCAEKU,KAAKmB,MAAMpB,Y,GALZR,aCjBKgC,E,4JACnB,WACE,OACE,8BAWE,cAAC,EAAD,U,GAdyBhC,aCHjCiC,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,IAAD,UACA,cAAC,EAAD,QAIFC,SAASC,eAAe,W","file":"static/js/main.103be601.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n// context  和props，state,在一个级别\r\nconst Context = React.createContext()\r\nexport default class A extends Component {\r\n    state ={username:'weimin',age:18}\r\n    render() {\r\n        return (\r\n            <div>\r\n                A的username:{this.state.username}\r\n                <Context.Provider value={{username:this.state.username,age:this.state.age}}>\r\n                    <B/>\r\n                </Context.Provider>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass B extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                B\r\n                <C/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// class C extends Component {\r\n\r\n//     static contextType = Context\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 C :{this.context.age},{this.context.username}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nfunction C(){\r\n    return (\r\n        <div>\r\n            C :\r\n            <Context.Consumer>\r\n                {\r\n                    value=>{\r\n                        return `${value.username},${value.age}`\r\n                    }\r\n                }\r\n            </Context.Consumer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Count extends Component {\r\n    state = {count:0}\r\n\r\n    add = ()=>{\r\n        // 对象式的 setState\r\n        // this.setState({count:this.state.count+1},()=>{\r\n        //     // 这里才是更新后的值\r\n        //     // 这个回调函数 是在 更新完成，页面也刷新后才 调用的\r\n        //     console.log(\"更新后的值：\",this.state.count)\r\n        // })\r\n\r\n        // 下一行拿到的不是  更新后的值\r\n        // console.log(\"更新后的值：\",this.state.count)\r\n\r\n        // 函数式的setState\r\n\r\n        this.setState((state,props)=>{\r\n            return {count:state.count+1}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                count：{this.state.count}\r\n                <br/>\r\n                <button onClick={this.add}>点我+1</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Child extends Component {\r\n    // state ={users:[{id:1,name:'weimin'},{id:2,name:'haha'}]}\r\n    state = {name:'weimin'}\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.users.map((user)=>{\r\n                        return <h3 key={user.id}>{user.name}</h3>\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Error extends Component {\r\n\r\n    state={hasError:''}\r\n\r\n    static getDerivedStateFromError(error){\r\n        console.log(error)\r\n        return {hasError:error}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                // 错误边界  只适用于生产环境\r\n                {this.state.hasError?<h2>出错了</h2>:<Child/>}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Fragment extends Component {\r\n    render() {\r\n        return (\r\n            // Fragment 可以写key属性\r\n            // <Fragment>\r\n            //     fragment\r\n            // </Fragment>\r\n\r\n            // 空标签什么都不能写\r\n            <>\r\n                ffff\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n//  class Hooks extends Component {\r\n//     state = {count:0}\r\n\r\n//     add = ()=>{\r\n\r\n//         this.setState((state,props)=>{\r\n//             return {count:state.count+1}\r\n//         })\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 count：{this.state.count}\r\n//                 <br/>\r\n//                 <button onClick={this.add}>点我+1</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// 函数式组件 使用 hooks\r\n\r\nfunction Hooks() {\r\n\r\n    // useState\r\n    // 操作state\r\n    const [count,setCount] = React.useState(0)\r\n\r\n    function add() {\r\n        // setCount(count+1)  第一种写法\r\n        \r\n\r\n        setCount((count)=>{return count+1})\r\n    }\r\n\r\n    const [name,setName] = React.useState('tom')\r\n\r\n    function change() {\r\n        setName('weimin')\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n    // useEffect\r\n    // 使用生命周期函数\r\n    React.useEffect(()=>{\r\n        let timer = setInterval(()=>{\r\n            setCount(count=>count+1)\r\n        },1000)\r\n\r\n        return ()=>{\r\n            // 卸载组件之前 删除定时器\r\n            clearInterval(timer)\r\n        }\r\n    },[])\r\n\r\n\r\n\r\n\r\n    function unmount(){\r\n        ReactDOM.unmountComponentAtNode(document.getElementById('root'))\r\n    }\r\n\r\n\r\n\r\n    // useRef\r\n\r\n    const myref = React.useRef()\r\n    function show(){\r\n        alert(myref.current.value)\r\n    }\r\n    return (\r\n        <div>\r\n            count：{count}\r\n            <br/>\r\n            name:{name}\r\n            <br />\r\n            <button onClick={add}>点我+1</button>\r\n            <br/>\r\n            <button onClick={change}>点我改名</button>\r\n\r\n            <br/>\r\n            <button onClick={unmount}>卸载组件</button>\r\n\r\n\r\n            <br/>\r\n\r\n            <input type=\"text\" ref={myref}/>\r\n\r\n            <button onClick={show}>点我提示数据</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Hooks\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{backgroundColor:'orange',color:'gray'}}>稍等哦</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, lazy, Suspense } from 'react'\r\nimport { NavLink, Route } from 'react-router-dom'\r\n\r\n\r\nimport Loading from './Loading'\r\n// import Home from './Home'\r\n// import About from './About'\r\n\r\n\r\n// 路由组件懒加载\r\nconst Home = lazy(() =>  import('./Home'))\r\nconst About = lazy(() => import('./About'))\r\nexport default class LazyLoad extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <NavLink to=\"/about\">About</NavLink>\r\n                <br />\r\n                <NavLink to=\"/home\">Home</NavLink>\r\n\r\n\r\n                <Suspense fallback={\r\n                    // <h1>loading...</h1>\r\n                    \r\n                    <Loading/>\r\n                }>\r\n                    <Route path=\"/about\" component={About} />\r\n                    <Route path=\"/home\" component={Home} />\r\n                </Suspense>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component,PureComponent } from 'react'\r\n\r\n\r\n// PureComponent\r\n// 原理就是重写了 shouldComponentUpdate\r\n\r\nexport default class Parent extends PureComponent {\r\n    state={car:'奔驰'}\r\n\r\n    change=()=>{\r\n        // this.setState({car:'法拉利'})\r\n\r\n        // this.setState({})\r\n\r\n        const obj = this.state;\r\n        obj.car='haha'\r\n        this.setState(obj)\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps,nextState){\r\n    //     // console.log(this.props,this.state.car)\r\n    //     // console.log(nextProps,nextState.car)\r\n\r\n    //     if(nextState.car===this.state.car) return false\r\n    //     else return true\r\n    // }\r\n\r\n    render() {\r\n        console.log('父亲的render')\r\n        return (\r\n            <div>\r\n                父亲的车：{this.state.car}\r\n                <button onClick={this.change}>换车</button>\r\n\r\n                {/* <Child car={this.state.car}/> */}\r\n                <Child car='aotuo'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Child extends PureComponent{\r\n\r\n    // shouldComponentUpdate(nextProps,nextState){\r\n    //     if(nextProps.car === this.props.car) return false\r\n    //     else return true\r\n    // }\r\n    render() {\r\n        console.log('孩子的render')\r\n        return (\r\n            <div>\r\n                \r\n                孩子的车：\r\n                {this.props.car}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class RenderProps extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                parent\r\n                <A render={(name)=>{return <B name={name}/>}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass A extends Component {\r\n    state ={name:'weimin'}\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                A\r\n                {this.props.render(this.state.name)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass B extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Bbbbbb\r\n                {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport A from './components/Context'\nimport Count from './components/Count'\nimport Error from './components/Error'\nimport Fragment from './components/Fragment'\nimport Hooks from './components/Hooks'\nimport LazyLoad from './components/LazyLoad'\nimport Parent from './components/Pure'\nimport RenderProps from './components/RenderProps'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <Count/> */}\n        {/* <LazyLoad/> */}\n        {/* <Hooks/> */}\n        {/* <Fragment/> */}\n\n        {/* <A/> */}\n\n        {/* <Parent/> */}\n\n        {/* <RenderProps/> */}\n        <Error/>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}
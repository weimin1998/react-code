{"ast":null,"code":"import _classCallCheck from\"D:/react code/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/react code/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/react code/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/react code/react_extension/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Count=/*#__PURE__*/function(_Component){_inherits(Count,_Component);var _super=_createSuper(Count);function Count(){var _this;_classCallCheck(this,Count);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={count:0};_this.add=function(){// 对象式的 setState\n// this.setState({count:this.state.count+1},()=>{\n//     // 这里才是更新后的值\n//     // 这个回调函数 是在 更新完成，页面也刷新后才 调用的\n//     console.log(\"更新后的值：\",this.state.count)\n// })\n// 下一行拿到的不是  更新后的值\n// console.log(\"更新后的值：\",this.state.count)\n// 函数式的setState\n_this.setState(function(state,props){return{count:state.count+1};});};return _this;}_createClass(Count,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[\"count\\uFF1A\",this.state.count,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:this.add,children:\"\\u70B9\\u6211+1\"})]});}}]);return Count;}(Component);export{Count as default};","map":{"version":3,"sources":["D:/react code/react_extension/src/components/Count/index.jsx"],"names":["React","Component","Count","state","count","add","setState","props"],"mappings":"gkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEqBC,CAAAA,K,uTACjBC,K,CAAQ,CAACC,KAAK,CAAC,CAAP,C,OAERC,G,CAAM,UAAI,CACN;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,MAAKC,QAAL,CAAc,SAACH,KAAD,CAAOI,KAAP,CAAe,CACzB,MAAO,CAACH,KAAK,CAACD,KAAK,CAACC,KAAN,CAAY,CAAnB,CAAP,CACH,CAFD,EAGH,C,uDAED,iBAAS,CACL,mBACI,qCACW,KAAKD,KAAL,CAAWC,KADtB,cAEI,aAFJ,cAGI,eAAQ,OAAO,CAAE,KAAKC,GAAtB,4BAHJ,GADJ,CAOH,C,mBA7B8BJ,S,SAAdC,K","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Count extends Component {\r\n    state = {count:0}\r\n\r\n    add = ()=>{\r\n        // 对象式的 setState\r\n        // this.setState({count:this.state.count+1},()=>{\r\n        //     // 这里才是更新后的值\r\n        //     // 这个回调函数 是在 更新完成，页面也刷新后才 调用的\r\n        //     console.log(\"更新后的值：\",this.state.count)\r\n        // })\r\n\r\n        // 下一行拿到的不是  更新后的值\r\n        // console.log(\"更新后的值：\",this.state.count)\r\n\r\n        // 函数式的setState\r\n\r\n        this.setState((state,props)=>{\r\n            return {count:state.count+1}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                count：{this.state.count}\r\n                <br/>\r\n                <button onClick={this.add}>点我+1</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}